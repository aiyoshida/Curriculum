■ IT
IT
2000年頃から使われるようになった、Information Technologyの略。一般的に、コンピュータとネットワークを利用した技術の総称と考えられれている。
ICT
Information and Communication Technology＝情報通信科学。意味合い的にはITとほとんど同じ。あえて違いを指摘すると、「ICT」はSNSの発達と同じ時期に広がってきた言葉です。「コミュニケーション」という言葉が入っているため「個人からの情報発信」を強調するニュアンスがあると言えます。国際的にはこっちの言い方の方が通じる。

IoT
Internet of Things の略。 日本語では、「モノのインターネット」と訳される事が多い。 これまでインターネットに接続されていなかった多くの物理的な「モノ」に、センサーや電子デバイスを埋め込んでインターネットに接続することで、それらの「モノ」がデータや情報をやりとりすることが可能になる。パソコンやスマホといったインターネットに接続することが前提の機器だけではなく、冷蔵庫や洗濯機といった日常的に使用する家電も含め、あらゆるデバイスがインターネットにつながり多様のサービスが展開されることを、総じてIoTと呼ぶ。EVもここに入るのかな…

■ OS
OS
Operation Systemの略で、アプリやデバイスを動作させるための基本となるソフトウェアのこと。キーボードやマウス・タッチパッドなどのデバイスから入力した情報をアプリケーションに伝え、またソフトウェアとハードウェアの連携を司る中枢的な役割を果たす。パソコンやスマートフォンにはゲームやワープロ・表計算などさまざまな仕事をするアプリケーションがありますが、それらはOSごとに開発される。

Windows
Windowsとは、マイクロソフト社が開発したOS。

macOS (Mac OS X)
Apple Computer社が開発したMacintosh用オペレーティングシステム（OS）。Xは「Mac OS」のシリーズのうち、2001年3月に発売されたバージョンの名称。

UNIX
UnixはOSの一種で、現存する中でもっとも古いOSのひとつ。古いだけあって、色々なOSの土台になったOS。特徴としては安全性が高く、また余計な機能が少ないので軽い。安い。macOSもUnix。古いが、今でも独自の進化を遂げて、企業内や商品に使われ続けている。カーナビや携帯電話などにも。アメリカの研究所で開発されて、最初は無料だったが今は権利の関係でライセンス契約することが必要。

Linux
安定性が高くて
マイナーなイメージがあって
黒い画面でキーボードだけ操作して
費用面でも優遇がある（Linuxは無料。Unixは高くなってはきてしまっているが）
企業で使われていることが多い。
という点でUNIXもLinuxも似てる。

OSで、こちらも色々なところで使われている。同じく黒画面で操作する。安定的に動いて、費用がかからない。Androidのスマートフォン。Linuxはオープンソースでとにかく無料だし改変も配布も自由

■ 言語・環境
マークアップ／フロントエンド
HTML
Hyper Text Markup Language（ハイパーテキスト・マークアップ・ランゲージ）の略。Webページを作るための最も基本的なマークアップ言語のひとつ。普段、私たちがブラウザで観ているWebページのほとんどが、HTMLで作られている。Webページの正体はHTMLタグを使って構成されている文書であり、これがブラウザで読み込まれることで、Webページが表示される。HTMLには「HTML」「XHTML」「HTML5」など、いくつか種類があり、使えるタグに違い。

CSS
CSS（Cascading Style Sheets、カスケーディング・スタイル・シート）とは、ウェブページのスタイルを指定するための言語

JavaScript
動的なWebページを作成する事のできるプログラミング言語であり、ユーザー側のWebブラウザと、Webサイトまたはウェブサービスの相互間のやりとりを、円滑にするために使う。Webサイトの外観のデザインや使い心地から、Netflixのサイトに表示される映画の題名のようなサイト内の情報表示に至るまで使われている。「メッセージボックスの表示」や「HTMLコンテンツの操作」、「カレンダー」、「地図」、「ゲーム」など、様々な動的コンテンツを作成できる言語

サーバーサイド
サーバ側で動く何かを意味している。このサーバ上で動くものをサーバサイドという言い方をする。サーバサイドエンジニアというと、サーバサイド（側）で動くシステムを作るエンジニアだ。Java,Ruby, PHPとかの言語。

.NET（C#, VB）
C#とVB.NETはどちらもWindows系アプリケーション（ASP.NET）を作成できるプログラミングとして有名。Microsftが開発したプログラミング言語。NET系のアプリ開発ができ、学びやすさ」と「使いやすさ」を重視して改良されてきた言語なので、初めてでも学びやすい。

Java
Java SE
（Java Standard Edition）を一言で言うと「Javaの基本機能をまとめたもの」。具体的にはJava言語でプログラミングを行う際に最低限必要な機能をまとめたもの。パソコン上で動作するゲームや便利なソフトを作ることができる。

Java EE（Jakarta EE）
（Java Enterprise Edition）は「JavaSEを元にしてサーバーサイドの機能を追加したもの」主にWebサイト（もしくはWebアプリケーション）を開発する際に用いられます。JavaEEは簡単にいえば「JavaSE+拡張機能」といった構成。

Perl
Perlは、CGIを実現するためのプログラミング言語の1つで、1987年に一般公開。当初は、テキスト処理やファイル処理に重点を置いたものでしたが、徐々に機能拡張され、またボランティアによって、Windows や Macintosh などのUNIX以外のプラットフォームにも移植されて、急速に普及を遂げてる。Perlはテキスト処理が得意なスクリプト言語で、値と文字列の自動変換機能、強力な正規表現が言語に組み込まれています。処理速度はRubyなどのスクリプト言語と比べて比較的高速ですので、人気も高い。Perlは言語としての歴史が長く、開発以来多くの利用者がいる言語なので、情報が豊富でコミュニティが活発なので、利用者には使いやすい。
Perlの応用範囲は広く、システムユーティリティやソフトウェアツールの作成、データベースへのアクセス、グラフィックやネットワーク処理、そしてウェブプログラミングなどに適している。

PHP
PHPはHTMLに埋め込むことができるため、Web開発でよく使用されるスクリプト言語。Web開発でよく使用されるスクリプト言語に、JavaScriptがありますが、PHPとJavaScriptの大きな違いは、そのコードがどこで実行されるかにある。

Ruby
まつもとゆきひろ氏により開発されたオブジェクト指向スクリプト言語です。CやJavaといったコンパイラ言語は、プログラムを実行するためにはコンパイルという手続き（人間が書いたソースコードを機械命令に変換）を介して初めて実行ができます。Rubyを使うメリットとして一番大きいのは、Ruby on RailsというWebアプリケーションフレームワークを使うことができるしかし、スクリプト言語はこう言った手続きが一切不要で、そのまま実行することができるため、コンパイラ言語に比べてプログラミングを手軽に行うことができる。

■ サーバーソフト
Apache
インターネット検索に使われるもの。動作が軽快で安定。使い勝手が良い。環境に依存しない。複数のOSに対応可能。誰でも無料で使える。

nginx　エンジンエックス
速い、大量処理が可能、設定が簡単。apacheについてWEBサーバーのシェア2位。

IIS　Internet Information Service
Microsoft社が提供するWindowsのWebサーバーソフト。無料、簡単、資格的にマウス操作できる。

■ SQL
SQLStructured Query Language）とは、リレーショナルデータベース（RDB)を操作するためのデータベース言語。データベースに要求を出すことをクエリ（問い合わせ）という。このクエリの中身であるSQL文はユーザーが作成する場合と、ユーザーは簡単な操作を行うだけでソフトウェアが作成してくれるのものがある。SQLはデータベースやテーブルに対して様々な操作を行うが、その命令は大きく分けて２つ。
データを定義するDDL（DataDefinitionLanguage）、データを操作するDML（DataManipulationLanguage）がある。

DB2
IBM社が提供しているリレーショナルデータベース管理システム（RDBMS）の製品群の総称。DB2のデータベース言語としてはSQLが採用されており、ODBC（Open Database Connectivity）やJDBC（Java Database Connectivity）などのようなインタフェースの仕様を用いたアプリケーションからアクセスすることが可能となっている。

MySQL
MySQLとは、世界でもっとも利用されている「データベース管理システム」。検索のスピードが高速で機能もすぐれているので、MySQLは「Yahoo!」「Google」「Nokia」「YouTube」などトップ企業で採用されている。MySQLを使うことで、ユーザーからのアクセスが多い大規模なアプリケーションに対応することができる。MySQLは、小さいアプリケーションから巨大なアプリケーションまですべてに対応できるほどの拡張性をもっています。
また MySQLはさまざまな環境で動作するようにテストされているので、Linux、Mac、Windowsなどを問わず動作します。
さらに、オリジナルの機能を追加するなど、自由なカスタマイズも可能になってます。

Maria DB
「MySQL」から派生したオープンソースリレーショナルデータベースシステム。「列単位」で処理を行うカラム型データベースエンジンによる並列処理が特徴。「拡張性」「処理性能」「高品質」が評価され、世界中で急速にシェアを拡大している。

Oracle DB
オラクル社が開発・販売しているリレーショナル・データベース管理 システム（Relational Database Management System（RDBMS））

PostgreSQL
リレーショナルデータベース（RDB）の作成や操作、管理ができるオープンソースのデータベース管理システム（DBMS）の一つ。MySQLと人気を二分するオープンソースRDBMSで、Linuxなど主要なUNIX系OSとWindowsに対応し、機能の豊富さや拡張性の高さに定評がある。

SQLite
オープンソースのリレーショナルデータベース管理システム（RDBMS:Relational Database Management System）の一つ。サーバー不要のファイルベースで動作することが特徴で、PHP 5から標準で組み込まれた。
手軽に使えるだけでなく、大量のクエリにも耐えることができる。今後は手軽なRDBMSとして、幅広く使われていくと予想される。

SQL Server
正式な名称は「Microsoft SQL Server」です。Microsoftのデータベースアプリケーションが「SQL Server」。		
SQL Serverはマイクロソフトのデータベース
Windowsユーザーは使いやすい
Oracleよりコストパフォーマンスに優れている

CRUD
CRUDとは、データベース管理システム（DBRS）に必要とされる4つの主要な機能、「作成（Create）」「読み出し（Read）」「更新（Update）」「削除（Delete）」をそれぞれ頭文字で表したもののことである。

トランザクション
関連する複数の処理や操作を一つの処理単位にまとめて管理する方式。複数の処理を連結した処理単位をトランザクション（transaction）という。
結果の整合性が要求される、複数の処理を1つにまとめたもの。
ただし、これら「複数の処理」は分離させることはできない。
実行した結果は、成功か失敗のいずれかである

コミット
トランザクションによるデータベースの更新内容が有効になること

ロールバック
トランザクションによる更新内容が無効になること。

排他制御（排他ロック）
共有しげんに対して同時にアクセスしても問題なく動作できる制御のこと。データの整合性を保つ。

楽観ロック
排他制御の代表的な方式の一つで、そもそも「同時アクセスはあまり起きない」という楽観的な考え方の排他制御です。データ自体をロックすることはせず、更新対象のデータが更新前と同じであるかを確認してから更新することで、データの整合性を保つ排他制御。
悲観ロック
排他制御の代表的な方式の一つで同じデータを他者が頻繁に更新するという悲観的な前提の排他制御です。具体的には、更新対象データを取得時にロックして他者が操作できないようにする方式。
実行計画
Oracle Databaseの「実行計画」とは、文字どおり「SQLを実行するための計画」と言えばそれまでなのですが、言い換えると、どうしたらより短い時間でSQLを実行できるか、計算して導き出された、具体的な方法を「計画」としてまとめたものと言える。

チューニング
ITの分野では、情報システムやコンピュータ、ソフトウェアなどの設定や構成を調整し、目標の状態に近づけたり、性能を最大限引き出したりする作業を指すことが多い。性能の計測や実行状態の監視、問題点やボトルネックの特定、問題を緩和・回避するための設定や構成の変更などの一連の作業から成る。パフォーマンス

スロークエリ
データベースにおいて、時間のかかっているSQL(遅いSQL)のことをスロークエリと呼びます。
基本的には、MySQLやPostgreSQLの設定により取得することができ、どの程度遅いものを対象とするか等を指定することが出来ます。

クエリログ
(General query log) は、クライアントからの MySQL Server への接続・接続解除の情報、およびクライアントから実行された全ての SQL クエリを出力してくれるログです。 SQL 実行エラーが発生した際に、どのような SQL が実行されたのかを正確に把握するのに役に立ちます。

IDE（統合開発環境）
ソフトウェア開発に必要なソフトウェアを一つに組み合わせ、同じ操作画面から統一的な操作法で利用できるようにしたソフトウェアパッケージ。一般的にはコードエディタやコンパイラ、リンカ、デバッガ、テストツール、バージョン管理ソフトなどで構成される。

Eclipse
Eclipse（エクリプス）とは開発を効率化するための統合開発環境（コンパイラ・エディタ・デバック機能などがセットになったツールで、IDE（Integrated Development Environmen）とも呼ばれています。
オープンソフトウェア（OSS）として公開され、開発業務を効率化させて生産性を高めてくれるツールとして、根強い人気があります。
主にJavaの開発環境として使用されていますが、C++・Ruby・PHPなどでも利用可能です。
開発の効率化
標準でJavaの開発環境が含まれている
プラグインを導入することでさまざまな言語が使える
便利なプラグインが豊富
開発支援機能
コード編集機能

NetBeans
Java IDEの1つ。プロジェクト管理機能や入力支援機能を備えたオープンソースのIDEです。Javaアプリケーション開発の統合環境として開発が始められたNetBeansですが、現在ではJavaのみならずJavaScriptやPHP、CおよびC++など、多くのプログラミング言語をサポートしています。Java EEなどJavaによるWebサービス開発のための環境も用意されています。

SpringToolSuite
STSは、Eclipseをベースにしているだけあって、基本的な使い方はEclipseそのまま。Spring Bootアプリケーションの開発に良い。

DBツール
データベース管理タスクに使用できるツール、ユーティリティおよび補助ツールの総称です。 類似するタスクを実行できるデータベース・ツールもありますが、1つのデータベース・ツールですべてのデータベース管理タスクを実行することはできません。

A5:SQL Mk-2
データベース開発において生産性を向上させるべく開発されたSQL開発ツールです。 SQLの実行・テーブルの編集・ストアドプロシージャの実行・ER図の作成 etc… などを行うことが出来ます。

pgAdmin
GUIによるPostgreSQLの管理ツールです。
接続したDBのインスタンス表示。
新規DB、テーブル、ログインロール作成(権限があれば)
当然のことながら、SQLの実行も可能。
また、DBインスタンスの状態がグラフィカルな状態で表示できるというGUI管理ツールとしての一通りの機能を備えています。

DBeaver
開発者、データベース管理者、アナリスト、およびデータベースを操作する必要があるすべての人々のための無料のマルチプラットフォームデータベースツール。 MySQL、PostgreSQL、SQLite、Oracle、DB2、SQL Server、Sybase、MS Access、Teradata、Firebird、Apache Hive、Phoenix、Prestoなど、一般的なすべてのデータベースをサポート

様々なDBMSに対応している。
月イチくらいのペースで結構頻繁にバージョンアップされている。
UIがEclipseと同じなので、Eclipseの操作に慣れていると同じ感覚で操作できる。
重いSQLを投げてDBeaverのウィンドウを非アクティブにして別の作業をしていると、SQLが終了した通知をWindowsに投げてくれる。
データのリレーションをクリックで辿れる。
ER図を作ってくれる。
いろいろ機能が豊富（過ぎてまだ把握しきれていない）

MySQL Workbench
MySQLの公式サイトにてMySQL Serverと共に配布されている、データベースの設計・開発・管理を一本で実現している無料ツールです。 コマンドラインではなくビジュアル操作（GUI）に対応しており、コマンド操作が苦手な方にもおすすめ

Sequel Pro
Mac用のMySQLのデータをGUI操作で管理するためのアプリケーションです。MacユーザーにとってMac用のMySQLデータ管理ソフトとして必要な機能を兼ね備えています。Sequel Proは、フリーソフトウェアですが、基本機能は充実しているため、Macユーザーにとっては重宝されているソフトです。


TeamSQL
完全無料を謳っているDBをGUIで管理する為のソフトウェアのひとつ。DBの種類に関係なく接続ができる。同カテゴリのソフトウェアとしては他に、phpMyAdminやMySQL Workbench、HeidiSQLなどがあります。

■ 肩書
PM　Project mamager
開発プロジェクトの取りまとめを行う役割であり、プロジェクトが成功するか失敗するかもPMの手腕次第と言っても過言ではないくらい、超重要な存在です。そのためプロジェクトの遂行にまつわる、さまざまな決裁権を託されています。
PMの仕事はシステムの構築ではなく、プロジェクトやメンバーの”マネージメント”が主になります。お客様との間で納期の取り決めなど、顧客折衝という部分でお客様との調整を行うところから、随時発生するトラブル対応の指揮やSE・PGの工程管理、メンバーの様子にも目を配りながら全体の士気を高めるようなことまで、その仕事は多岐にわたります。

PL
開発プロジェクトが小規模の場合は立てないことも多いです。中規模～大規模プロジェクトとなり、メンバーが増えてPMが全体に目を配ることが難しくなってくると、PLを立ててしっかりと管理ができる体制を整えていきます。
PMの補佐のような役目ではありますが、内向きな管理になることが多い気がします。例えばSEやPGが工程を厳守するあまり、プログラムの品質が落ちていないかをチェックしたり、チーム内の各グループ間でしっかりと情報伝達が行われているかなど、より細かいところに目を向けながら、プロジェクトを動かしていきます。
システム仕様についてもしっかりと理解しながら、メンバーの管理もしていかなければなりませんので、コミュニケーション力の低いSEにはちょっと荷が重い役割となります。

PG（PE）
PG（プログラマー）はSEの手足となって、SEが用意した仕様書をもとにプログラミング・単体テストをするのが主な作業となります。SEとPGの違いについては「プログラマーとシステムエンジニアの違いについて」をご覧ください。
ただし近年ではPGが担当する工程を人件費の安い海外諸国に発注するオフショア開発も盛んになっています。

SE
SE（システムエンジニア）はプロジェクトチームの中ではメンバーという扱いになり、開発メンバーの一員として担当作業が割り振られます。そしてPMが作成した工程表に沿って、自分の担当業務をこなしていきます。
主な作業は担当のお客様と打ち合わせしていく中で、要件の確定や仕様の検討など、主に上流工程の仕事をしていきます。ただし”SE兼PG”として、SEがPGの役割を同時にこなしていくこともよくあります。
プロジェクトを成功させるためにはPMの存在が重要だと先に述べましたが、SEも「言われたことだけ、与えられたことだけをやればいい」という受け身の精神ではなく、能動的に動くことが求められます。プロジェクトとはチーム一丸となって成功させるものなのです。
SEだとしても工程と品質に対する意識は高くしながら、仕事をしていかなければなりません。

デザイナー
企業・個人問わずクライアントから依頼されたWebサイトのデザインを作成する仕事のこと

エンジニア
IT・Web業界におけるエンジニアとは、プログラミング言語やIT・コンピューターの知識・スキルを活かして、クライアントの要望・課題を解決する技術者のこと

サーバーサイド・エンジニア
サーバーサイドというのは、インターネット上でサーバー側から行う処理に対して必要なプログラムの設計・開発に携わり、サーバーで扱うデータ管理を専門的に行うエンジニアのことを指します。 Web上で扱われるアプリでも、主にサーバーで行う処理の開発・状態の保存や維持をなすエンジニアを、サーバーサイドエンジニアと言います。

バックエンド・エンジニア
プログラムの開発からWebサーバー、データベースといった環境整備まで幅広く担当するWeb系の技術者です。 主に、ユーザーからは見えない裏側（バックエンド）のシステム部分を構築します。

■ UI（ユーザーインターフェース）
UI
User Interface／ユーザーインタフェース）とは「ユーザーがPCとやり取りをする際の入力や表示方法などの仕組み」を意味し、UX（User Experience／ユーザーエクスペリエンス）は「サービスなどによって得られるユーザー体験」のことを指します。

CUI
CUIとはCharacter User Interface（キャラクターユーザーインターフェース）の略で、文字だけでパソコンを操作する環境の事

GUI
GUIとはGraphical User Interface（グラフィカルユーザーインターフェース）の略で、グラフィカル（絵やアイコン）な操作環境の事

■ ファイル／ディレクトリ

ファイル
メモ、HTML文書、コマンドなど。

拡張子
パソコンやスマホで扱うファイルの種類を識別するための文字列のことです。具体的には、ファイル名の末尾に付与される.（ピリオド）以降の３文字前後の英数字のことで、これを確認することでファイル形式を判別することが可能になります。具体例：「報告書.txt」の「.txt」が拡張子となります。

ディレクトリ
ファイルのありかをしめるファイル。

ルート・ディレクトリ
ディスクを開いて一番最初にフォルダがある場所、階層構造の一番上にある場所を ルートディレクトリといいます。
ここが Cドライブのルートディレクトリになります。Cドライブ直下という言い方もします。
C:\ もしくは C:/ と表します。
ルートというのは、根源とか根本という意味で、IT用語では ルートサーバー、ルート認証局などがあります。

カレント・ディレクトリ
カレントディレクトリとは 現在いるディレクトリ、作業しているディレクトリのことです。

例えば Cドライブ→ユーザー→パブリックと進み、パブリックフォルダ内で作業しているとします。
その場合、パブリックフォルダがカレントディレクトリになります。
C:\Users\Public と表します。

パス
コンピューターの世界では ディレクトリやファイルの場所は パスで表記されます。そのファイルのおかれている場所は、パスによって経路が示されています。

絶対パス
絶対パスというのは ルートディレクトリからの経路

相対パス
相対パスは ホームページの作成などでよく使われます。
絶対パスがルートディレクトリからの経路であったのに対して、相対パスは現在のディレクトリ、カレントディレクトリからの経路を表します。
閲覧しているホームページというのは、Windowsと同じようにディレクトリによって構成されています。ホームページもパソコンで作成するので 全く同じなのです。

■ ネットワーク
LAN
ケーブルや無線などを使って、同じ建物の中にあるコンピュータや通信機器、プリンタなどを接続し、データをやり取りするネットワーク。Local Area Network の略称で、狭い範囲内でのコンピューターネットワークのこと。「構内通信網」と訳されることもある.範囲の定義はないですが、通常は一つの敷地の中と考えるとよいでしょう。大学や会社、工場などの大規模な LAN もあれば、家庭での LAN のような小さなものまであります。撚線
よりせんや同軸ケーブル、光ファイバーなどで配線するものを「有線LAN」、電波を用いるものを 「無線LAN」 という。

WAN
LAN に対して、LAN で接続しきれない遠隔地のコンピューター同士
どうしを接続するネットワーク形態を WAN (Wide Area Network) と言います。WAN では、距離の離れているコンピューターや LAN 同士
どうしを、通信回線などを使って接続します。インターネットは WAN の形態で接続されています。身近な WAN です。世界中のコンピューター同士を相互に接続して構成されています。WAN には、支店・支社を持つ企業などが情報共有のために構築することが多く、限定されたユーザーだけが利用できる、閉じた （クローズド） のネットワークと、インターネットのように世界中のだれでも利用できるオープンなネットワークとがあります。

クライアント（需要）
サービスや機能を使う側のコンピューターのこと。か、依頼主的なニュアンスのお客さんのこと

サーバー（供給）
ネットワーク上のコンピュータの中で、他のコンピュータ（クライアント）から要求や指示を受け、情報や処理結果を返す役割を持つコンピュータやソフトウェアのこと。 

■ 各種プロトコル　通信プロトコル（プロトコル）は「通信するときに使うお約束事

HTTP　HyperText Transfer Protocol 
WebサーバとWebクライアントの間でデータの送受信を行うために用いられるプロトコル（通信規約）。Webページを構成するHTMLファイルや、ページに関連付けられたスタイルシート、スクリプト、画像、音声、動画などのファイルを、データ形式などのメタ情報を含めてやり取りすることができる。ホームページを構成しているhtmlファイルや画像ファイルなどの情報を、自分のパソコンで受け取り閲覧するためのしくみのこと

FTP　File Transfer Protocol
ファイルを転送するときに使うプロトコル＝約束事のことです。
通信プロトコルというのはネットワーク通信をする際の決まり事のことで、通信規約のようなものだと思ってください。このFTPという通信方法を使用することで、ファイルをサーバーとPCの間などでやりとりすることができるようになるのです。

HTTPS
HTTPSは「HTTP over SSL/TLS」の略で、httpに暗号化技術を適用したものとなります。SSLは「Secure Socket Layer」、TLSは「Transport Layer Security」の略で、それぞれネットワーク上で暗号化通信する仕組み（プロトコル）です。現在はTLSで暗号化を行なっており、SSL自体は使用されていません。ですが、今もなおSSLという言葉がメジャーなためにTLSをSSLと呼んでいるのです。Webブラウザのアドレスバーにhttp://ではなく、https://とついている場合、httpsで通信しているということを示しています。合わせて鍵のマークが表記されているでしょう。

SSL
インターネット上の通信を暗号化する仕組み

SSH
通信が暗号化されるtelnet(他のコンピュータを遠隔操作するときに使うやつ)

ポート、ポート番号
ポートとは、ネットワークでデータを通信するための扉のようなものだと思うとわかりやすいだろう。ポート番号はその扉の番号だ。それぞれプログラムの種類によって、使うポート（扉）が違う。例えば、メールを送るにはこの扉、メールを受け取るにはこの扉、Webページを見てもらうのはこの扉、などと決まっているわけだ。実際TCPやUDPで通信を行うときは、コンピュータ一台という単位ではなく「プログラム単位」つまり「プロセスやスレッド単位」で通信が行われる。そのためプロセス同士、正しく受け渡しをする必要がある。このとき通信しているプロセスには「ポート番号」というものが割り振られる。プロセスやスレッドはこのポート番号を目印にして、どのアプリケーションとどのアプリケーションが通信をとっているのかを判別することになる。IPアドレスを建物の住所に例えるなら、ポート番号は「部屋の番号は何号室か？」という例えになる。コンピュータネットワークにおいて、プロトコル、IPアドレスとポート番号はまとめると、「どのような方法」で「どこ」の「何号室」に通信をとるのか？という形にいいかえることが出来る。通信において重要なポート番号だがポートを開くということは、特定の部屋の扉をあけはなっている状態に等しいので、サービスを提供するサーバでもないかぎり。基本的に不必要なポートは開かないように設定しておかなければならない。

HTTP、FTP、SSHの各ポート番号
TCP 80 : HTTP  　CP 20 : FTP (データ) TCP 21 : FTP (制御) 　TCP 22 : SSH


ファイアウォール
「防火壁」を意味するファイアウォールは、簡単に説明するとネットワークとネットワークに間に立ち不正アクセスをブロックするためのシステムです。サイバー攻撃者は常に外部ネットワークから内部ネットワークへの侵入を目論んでおり、さまざまな手法で侵入を試みます。
ファイアウォールはそんな外部ネットワークからのアクセスを常に監視して、不正アクセスがないかをチェックしてくれているガードマンのようなものなのです。具体的にどのようにして監視・チャック・ブロックをするかというと、まずPCにはポートというものが存在します。
ポートとはPCやサーバーごとに0～65535番まであり、ソフトウェアごとに特定のポートを開いて外部や内部へと通信します。
つまりすべての通信の出入り口なのですが、サイバー攻撃者はこのポートから侵入を試みるのです。
49152番以降のポートはユーザーが自由に使用できるのですが、使用していないポートは閉じなければ攻撃の入り口となってしまいます。
また、ソフトウェアによっては常にポートが開きっぱなしになっていることもあるので制御が必要です。
ファイアウォールはこれらのポートを制御することで、外部からの不正アクセスをブロックしています。

TCP
通信プロトコル、品質重視、インターネットとかで使われてる。送ったデータが相手に届いたか、その都度確認しながら通信するやり方。信頼生は高いが。転送速度は低いという特賞。

■ IPアドレス
IPアドレス
IPアドレスはパソコン、スマートフォン、タブレットなどでネットワーク通信を行う場合に利用されます。ネットワークに接続されたプリンターやIP電話などでもIPアドレスは利用されています。
IPアドレスによりインターネットアクセスも可能となっており、意識していなくてもIPアドレスによる通信は行われています。IPアドレス（IPv4）の組み合わせ数は約43億個となり、ほぼすべてが既に全世界へ割り振り済みのため、IPアドレスの枯渇が問題となっています。このため、IPv4に変わるIPv6のIPアドレス利用が進められていますが、現時点インターネットではほとんど利用されていません。（一部では試験的に利用が開始されています）
IPv6は、組み合わせが「約43億個の4乗=約340澗個」となり、実質無限に近いIPアドレスが利用できます。パソコンや各種機器は数年前からIPv6対応が始まっており、今後IPv4からIPv6に順次移行が行われていく予定です。「340,282,366,920,938,463,463,374,607,431,768,211,456個=約340澗個」

グローバルIPアドレス
インターネットなど公共回線でアクセスを行う時に使用するIPアドレス。インターネットを管理する組織やプロバイダーによりIPアドレスが管理されていて自由に割振りはできない（通常はプロバイダーがIPアドレスを割振りしている）使用できる範囲は「IPアドレス一覧」を参照。グローバルIPアドレスは同時に世界中で重複しない。

プライベートIPアドレス
家庭内や施設内のネットワーク機器で使用する。家庭や企業で自由にIPアドレスを割り振りできる。同一LAN（≒家庭内、施設内）では同じIPアドレスは割振りできないが、違うLANであれば、同じIPアドレスが使用できる。プライベートIPアドレスのままでは、インターネットを利用できない
通常はルータ等の機器で「プライベートIPアドレス」⇔「グローバルIPアドレス」変換されインターネットを利用している。

■ ドメイン
ドメイン
ドメインとは「インターネット上の住所」のことで、Webサイトがどこにるるかを判別する情報として利用します。
詳しく説明すると、Webサイトがどこにあるのかを判別する情報は、ドメインに紐づく「IPアドレス」というものにあります。IPアドレスは「000.00.00.00」のような数字で構成される文字列ですが、数字だけでは覚えづらいため、ドメイン名に変換してWebサイトの場所を示します。ドメインはWebサイトのURLや、メールアドレスの中で使われています。
例えば、WebサイトのURLでは「https://muumuu-domain.com」の「muumuu-domain.com」部分がドメインです。これに対して、メールアドレスでは「mail@muumuu-domain.com」の「muumuu-domain.com」部分が該当します。
メールアドレスでドメインを使用する場合、@以前の文字列を変えるだけで、メールアドレスを複数所持することが可能です。

DNS
DNSは、Domain Name Systemの略で、 インターネット上で ドメイン名 を管理・運用するために開発されたシステムです。 現在、インターネットを利用するときに必要不可欠なシステムの一つとなっています。
郵便で手紙を送る時に住所が必要であるのと同様に、 インターネットでは、 電子メールを送ったりウェブサイトを見たりするために、 相手がインターネット上のどこにいるのかを特定する必要があります。 その際に、例えばnic.ad.jpなどのドメイン名は、 人が覚えやすい「インターネット上の住所」にあたるものとして利用されています。
では、DNSとはどのようなものなのでしょうか。
インターネットに接続している機器には「IPアドレス」という番号が割り当てられます。 そして、インターネット上における通信は、 自分と相手先のIPアドレスを用いて行われます。 例えば、JPNIC Web (http://www.nic.ad.jp/)をWebブラウザで見るときには、 実際にはwww.nic.ad.jpのIPv4アドレスである192.41.192.129、 あるいはIPv6アドレスの2001:dc2:1000:2006::cafeという宛先IPアドレスと通信が行われます。
この「www.nic.ad.jp というドメイン名には、 IPv4アドレス192.41.192.129とIPv6アドレス2001:dc2:1000:2006::cafe が対応している」 といった情報を保持、 あるいは検索するためのシステムがDNSです。

VPN
VPNとはVirtual Private Networkの略で、直訳すると「仮想専用線」となります。特にフリーのWi-Fiなど、公衆のネットワークでやり取りする情報は盗み見や改ざんなどのリスクがあり、個人情報など盗み見されることが重大なリスクにつながるような情報をそのままやり取りするのはおすすめできません。
そこで利用を検討したいのが、VPNです。インターネット上に仮想の専用線を設け、安全なルートを確保した上で重要な情報をやり取りすることにより、盗み見や改ざんなどの脅威から大切な情報を守ることができます。
治安に不安のある道路を通行しようと思っている時を想像してみてください。そこを身一つで歩くのは危険ですが、目的地まで送り届けてくれるタクシーがあれば安全に通行できます。VPNとはこのタクシーに相当するもので、さまざまなリスクから守りつつ安全に情報通信ができる仕組みのことです。

ブリッジ
ネットワークの分野で、複数のネットワークセグメントを結ぶ中継機器のうち、受信したデータのMACアドレスなどデータリンク層（リンク層、第2層、MAC層）の宛先情報を参照して中継の可否を判断する機能を持ったものをネットワークブリッジあるいは単にブリッジという。
ブリッジは接続されたセグメントから流れてきたデータの宛先情報を解析し、もう一方のセグメントに関係する（宛先がそのセグメントに存在する、ブロードキャストフレームであるなど）ものであれば中継し、そうでないものは破棄する。無駄な信号が流れるのを防いで性能を向上させることができる。

プロキシサーバー
プロキシサーバは外部ネットワークが提供するサービスを、内部ネットワークに存在するクライアントへ提供するための代理サーバとして利用される。
* プロキシサーバにてキャッシュを行うことにより内部ネットワークから外部ネットワークへのトラフィックを低減することができる。
* 内部ネットワークへの不正侵入などを防ぎながら、内部ネットワークから外部ネットワークへのアクセスができる。
* 代表的なプロキシサーバであるSquidの設定を行いプロキシサーバの実際の動作を確認する。


■ 電子メール
SMTP
「SMTP」とは「Simple Mail Transfer Protocol（シンプル・メール・トランスファー・プロトコル）」の略で、あえて訳せば「簡単なメールの送信の手順」というところだろうか。お約束ごとと考えてもいい。
あなたがメールを書き、宛先のアドレスを入力して「送信」アイコンをクリックする。このとき、あなたのスマホやパソコンは、この「SMTP」のお約束ごとに従って、あなたが契約しているメールサーバーと、こんなやり取りをするのである。「メールを送るよ〜」「ええで！」「宛先は〇●だよ」「りょ」「本文はかくかくしかじかだよ」「受け取ったで！」――とまぁそんな具合。

POP
さて、紙の手紙は郵便局の人が配達してくれるが、実は電子メールはスマホやパソコンに自動的に配達はされない。「そんなことない。うちのメールソフトは立ち上げておけば、なにもしなくてもメールがポンポン届くよ」と、あなたは思うかもしれない。それは、実際のところ送られてくるのではなく、メールソフトが自動的にメールサーバーにアクセスしてメールをダウンロードしているのだ。
郵便にたとえると、せっせと郵便局に出かけては私書箱から手紙を取ってくるようなもの。この仕組みが「POP」だ。
「POP」は「Post Office Protocol（ポスト・オフィス・プロトコル）」の略で、まさしく「郵便局の手順」だ。こちらはメールサーバーに対して、「メールを受け取りに来たよ〜」「りょ。名前とパスワードは？」「●◎▲＄＃だよ」「OK。３通来てるで！」「持っていっていい？」「ええで」といった具合。

IMAP
「IMAP」は「Internet Message Access Protocol（インターネット・メッセージ・アクセス・プロトコル）」の略で、実は「POP」と同じ、メールを取り込むための手順なのだ。その違いは、メールをサーバーに残すか残さないかにある。「POP」では、メールをいったんスマホやパソコンにダウンロードして取り込むと、サーバーからは無くなってしまう（何日間は消さずに残すという設定もできる）。郵便局の私書箱から手紙を取ってきたら、私書箱の中は空っぽなるのと同じだ。だが、「IMAP」では、ダウンロードするのはメールのいわばコピー（キャッシュ）で、メール本体はサーバーにいつまでも残ったままなのだ。つまり、ユーザーのメールはサーバーが管理してくれるというわけだ。

■ セッションとクッキー
セッション
セッションとは、一連の処理の始まりから終わりまでを表す概念のことです。セッションという定義は広く、さまざまなところでセッションという用語が使われます。
Wikipediaの セッション を見るとわかりますが、下記の通り様々なところでセッションという用語が使われています。理解できない用語も多々あるかと思いますが、セッションというのがどのような意味で使われているか確認してください。

クッキー
正式には HTTP Cookie という名称ですが、一般的には略してCookieと呼びます。Cookieは、クライアントに保存された情報のことです。
サーバーからのレスポンスメッセージに「Cookieを保存してください」という指示があれば、クライアントは指示に従い、Cookieを保存します。クライアントにCookieが保存されていれば、クライアントは、常にリクエストメッセージに「このようなCookieがあります」とサーバーに教える仕組みになっています。

キャッシュ
キャッシュとはパソコンやスマホに一時的にウェブページのデータを保存しておいて、次に同じページを開いたときに素早く表示させる仕組み。

■ DB（データベース）について
インデックス
インデックス（索引）は、データベースの性能を向上させる方法の一つです。 インデックスは「探すレコードを識別するデータの項目」「対象レコードの格納位置を示すポインタ」で構成されており、これを利用してデータの格納位置を特定し、その位置を直接アクセスする事で、表の検索速度を上げることができます。-

■ テストについて
フロー
単体テストとは，クラスや関数といった単位のプログラムのテストになります，主に設計通りにこれらが動くかをテストし，論理構造が適切かを確認します．
機能確認テスト
1つのモジュールが設計書や仕様書通りに動作することを確認するテスト
制御フローテスト
プログラムの論理構造に沿って，「命令」や「分岐」などが実行されるかを確認するテスト
データフローテスト
データや変数が「定義」「使用」「消滅」の順に行われているかを確認するテスト


■ チケット管理ツール
タスク
チケット管理ツールとは、要はタスク管理ツールのことです。 プロジェクト毎に発生する各種タスクを発行して、制作者に対して仕事を依頼するためのものです。 もちろん、自分自身で管理するために使用するのもOKです。

■ バージョン管理
日々の業務において、PC上ではプログラムのソースコード、WebサイトのHTML、テキスト文書など、さまざまなデータが作成されています。こうしたデータは常に新規作成・追加・修正・削除などが行われ、その内容は変化していきます。
プログラムの開発などは、プロジェクトに所属する複数のメンバーで同時に作業を行うのが一般的です。しかし、複数のメンバーがデータに対して無秩序に変更を行っていくと、「誰が」「いつ」「どのような変更を行ったか」「いったいどのデータが最新なのか」といった情報が失われ、混乱が発生してしまうでしょう。
こうした混乱が起きると、「以前修正したはずのバグがいつのまにか再発していた（リグレッション）」「最新でないコードをリリースしてしまった」「古いドキュメントを参照して作業した結果、障害を起こしてしまった」といった問題が起こる可能性もあります。
そこで、データに対して「誰がいつ」「どのような変更を」「どんな理由で行ったか」という変更履歴情報を記録するシステムが作られました。こうしたシステムを「バージョン管理システム」と呼びます。


Git
Gitとはプログラムのソースコードのバージョンを管理することができるツールの一つです。今や全世界で活用されている、エンジニアには欠かせないツール。「分散型」のバージョン管理システム。Gitでは中心となるサーバー上だけでなく、個々の作業者が各自のPC上にリポジトリ全体のコピーを持つことができる

SVN
Apache Subversion」のこと。Gitが出てきてからちょっと負けがち。

デグレ
「デグレード(degrade)」を略したIT用語です。 ... そして、IT業界における「デグレード（degrade）」とは、システム開発におけるプログラム修正やインフラ設定の変更等により、それまで正常に動作していた機能が動かなくなるという、品質低下のトラブル事象

マージツール
MDLファイル中の既存のマップ式を保持しながら，FDLファイル又はDTDファイルの変更内容をMDLファイルにマージする機能です。マージ機能を使用することで，再マッピングの作業を最小限に抑えることができます。
